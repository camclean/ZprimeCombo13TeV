observables = {
   mass = {
       range = (500.0, 1500.0);
       nbins = 200;
   };
};
     
parameters = ("s", "b", "delta");  //delta is used to interpolate between the templates

nominal-histogram =  {
   type = "fixed_gauss";
   observable = "mass";
   normalize_to = 1.0;
   mean = 1000.0;
   width = 250.0;
};

plus-histogram =  {
   type = "fixed_gauss";
   observable = "mass";
   normalize_to = 1.1;
   mean = 1050.0;
   width = 250.0;
};

minus-histogram =  {
   type = "fixed_gauss";
   observable = "mass";
   normalize_to = 0.9;
   mean = 950.0;
   width = 250.0;
};



gaussoverflat = {
    mass = {
        signal = {
            coefficient-function = {type = "multiply"; factors = ("s");};
            histogram = {
                type = "cubiclinear_histomorph";
                parameters = ("delta");
                nominal-histogram = "@nominal-histogram";
                delta-plus-histogram = "@plus-histogram";
                delta-minus-histogram = "@minus-histogram";
            };
        };
        
        bkg = {
            coefficient-function = {type = "multiply"; factors = ("b"); };
            histogram = {
                type = "fixed_poly";
                observable = "mass";
                normalize_to = 1.0;
                coefficients = [1.0];
            };
        };
    };

    parameter-distribution = {
        type ="product_distribution";
        distributions =("@b-dist", "@delta-dist",
            {
             type = "flat_distribution";
             s = {
                range = (0.0, "inf");
                fix-sample-value = 200.0;
            };
        });
    };
};

b-dist = {
  type = "gauss";
  parameter = "b";
  mean = 1000.0;
  width = 200.0;
  range = (0.0, "inf");
};
            
/* an adequate distribution for a "delta"-like parameter (i.e., a parameter used for interpolation),
   is often a gaussian around 0 with width 1 */
delta-dist = {
  type = "gauss";
  parameter = "delta";
  mean = 0.0;
  width = 1.0;
  range = ("-inf", "inf");
};

mle = {
    type = "mle";
    name = "mle";
    minimizer = {type = "root_minuit"; };
    parameters = ("s");
};

main = {
   data_source = {
       type = "model_source";
       model = "@gaussoverflat";
       name = "source";
       // do not dice poisson data. This will produce so-called "asimov data" which
       // contains the predicted Poisson mean in each bin
       dice_poisson = false;
       
       // as parameter-distribution, scan through different values of "delta" and use fixed ones for the others.
       // This is useful to estimate the impact of an uncertainty on the final result: use asimov data
       // and the "vary_one" distribution. Note that you can scan more than one "delta"-like parameter
       // at a time, see documentation of "vary_one" for details.
       override-parameter-distribution = {
           type = "vary_one";
           s = {default = 200.0;};
           b = {default = 1000.0;};
           delta = {
               default = 0.0;
               values = (-2.0, -1.0, -0.5, 0.0, 0.5, 1.0, 2.0);
           };
       };
       
   };
   model = "@gaussoverflat";
   producers = ("@mle");
   n-events = 10;
   output_database = {
        type = "sqlite_database";
        filename = "gaussoverflat-histomorph.db";
   };
};

options = {
  plugin_files = ("$THETA_DIR/lib/root.so", "$THETA_DIR/lib/core-plugins.so");
};

